HDDSFruitOth ~ "Autres fruits",
HDDSPrMeatF ~ "Viande fraîche",
HDDSPrMeatO ~ "Autres viandes",
HDDSPrFish ~ "Poissons et fruits de mer",
HDDSPrEgg ~ "Œufs",
HDDSDairy ~ "Produits laitiers",
HDDSFat ~ "Huiles et graisses",
HDDSSugar ~ "Sucre et sucreries",
HDDSCond ~ "Condiments et épices"
),
statistic = all_continuous() ~ "{mean} ({sd}), médiane {median}, IQR {p25}–{p75}",  # Statistiques descriptives de base
digits = all_continuous() ~ 1,  # Nombre de décimales
missing = "no"  # Ignorer les valeurs manquantes dans les calculs
) %>%
modify_header(
label  = "**Score de diversité alimentaire des ménages**",
stat_0 = "**Statistiques**"
) %>%
modify_spanning_header(
everything() ~ "**Score de diversité alimentaire des ménages (hhds)**"
)%>%
gtsummary::bold_labels()
# Conversion en flextable pour une mise en forme compacte
tbl_desc_hdds %>%
as_flex_table() %>%
autofit() %>%
fontsize(size = 8, part = "all") %>%
padding(padding = 1, part = "all")
# Liste des variables représentant les groupes alimentaires
hdds_vars <- c("HDDSStapCer", "HDDSStapRoot", "HDDSPulse", "HDDSVegOrg", "HDDSVegGre", "HDDSVegOth",
"HDDSFruitOrg", "HDDSFruitOth", "HDDSPrMeatF", "HDDSPrMeatO", "HDDSPrFish", "HDDSPrEgg",
"HDDSDairy", "HDDSFat", "HDDSSugar", "HDDSCond")
# Calcul du score de diversité alimentaire
base_principale$HDDS_score <- rowSums(base_principale[hdds_vars] == "Oui", na.rm = TRUE)
# Créer un graphique de distribution du score de diversité alimentaire
ggplot(base_principale, aes(x = HDDS_score)) +
geom_histogram(bins = 15, fill = "skyblue", color = "black", alpha = 0.7) +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5, size = 3) +  # Ajout des effectifs
labs(title = "Distribution du score de diversité alimentaire",
x = "Score de diversité alimentaire",
y = "Fréquence") +
theme_minimal() +
theme(text = element_text(size = 7))
# 1. Calculer les moyennes des indicateurs par code de région
region_means <- base_principale %>%
dplyr::group_by(adm1_ocha_match) %>%
dplyr::summarise(
mean_SCA        = mean(SCA,        na.rm = TRUE),
mean_rSCI       = mean(rSCI,       na.rm = TRUE),
mean_HDDS_score = mean(HDDS_score, na.rm = TRUE),
mean_LhCSI_score = mean(LhCSI_score, na.rm = TRUE),
mean_SERS_score = mean(SERS_score, na.rm = TRUE),
.groups = "drop"
)
# 2. Récupérer les noms francisés des régions depuis le shapefile
regions_labels <- regions_sca %>%
dplyr::select(ADM1_PCODE, ADM1_FR) %>%
dplyr::rename(adm1_ocha_match = ADM1_PCODE)
# 3. Fusionner les moyennes avec les noms de région
region_summary <- region_means %>%
dplyr::left_join(regions_labels, by = "adm1_ocha_match") %>%
dplyr::select(ADM1_FR, mean_SCA, mean_rSCI, mean_HDDS_score, mean_LhCSI_score, mean_SERS_score) %>%
dplyr::arrange(ADM1_FR)
# 4. Mettre en forme dans un flextable
library(flextable)
region_summary %>%
flextable::flextable() %>%
flextable::set_header_labels(
ADM1_FR           = "**Région**",
mean_SCA          = "**SCA moyen**",
mean_rSCI         = "**rCSI moyen**",
mean_HDDS_score   = "**HDDS moyen**",
mean_LhCSI_score   = "**LhCSI moyen**",
mean_SERS_score   = "**SERS moyen**",
) %>%
flextable::colformat_double(j = 2:4, digits = 1) %>%
flextable::autofit() %>%
flextable::fontsize(size = 10, part = "all") %>%
flextable::padding(padding = 2, part = "all") %>%
flextable::theme_vanilla() %>%
flextable::add_footer_lines("Source : Calcul de l’auteur ")
# 1. Calculer les moyennes des indicateurs par code de région
region_means <- base_principale %>%
dplyr::group_by(adm1_ocha_match) %>%
dplyr::summarise(
mean_SCA        = mean(SCA,        na.rm = TRUE),
mean_rSCI       = mean(rSCI,       na.rm = TRUE),
mean_HDDS_score = mean(HDDS_score, na.rm = TRUE),
mean_LhCSI_score = mean(LhCSI_score, na.rm = TRUE),
mean_SERS_score = mean(SERS_score, na.rm = TRUE),
.groups = "drop"
)
# 2. Récupérer les noms francisés des régions depuis le shapefile
regions_labels <- regions_sca %>%
dplyr::select(ADM1_PCODE, ADM1_FR) %>%
dplyr::rename(adm1_ocha_match = ADM1_PCODE)
# 3. Fusionner les moyennes avec les noms de région
region_summary <- region_means %>%
dplyr::left_join(regions_labels, by = "adm1_ocha_match") %>%
dplyr::select(ADM1_FR, mean_SCA, mean_rSCI, mean_HDDS_score, mean_LhCSI_score, mean_SERS_score) %>%
dplyr::arrange(ADM1_FR)
# 4. Mettre en forme dans un flextable
library(flextable)
region_summary %>%
flextable::flextable() %>%
flextable::set_header_labels(
ADM1_FR           = "**Région**",
mean_SCA          = "**SCA moyen**",
mean_rSCI         = "**rCSI moyen**",
mean_HDDS_score   = "**HDDS moyen**",
mean_LhCSI_score   = "**LhCSI moyen**",
mean_SERS_score   = "**SERS moyen**"
) %>%
flextable::colformat_double(j = 2:4, digits = 1) %>%
flextable::autofit() %>%
flextable::fontsize(size = 10, part = "all") %>%
flextable::padding(padding = 2, part = "all") %>%
flextable::theme_vanilla() %>%
flextable::add_footer_lines("Source : Calcul de l’auteur ")
# Bar plot avec effectifs pour seuils 21/35
ggplot(base_principale, aes(x = SCA_Categorie_21_35)) +
geom_bar(fill = "#2E86AB", color = "white") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.3, size = 4) +
labs(
title = "Répartition du SCA selon les seuils 21/35",
x     = "Catégorie SCA",
y     = "Nombre d'observations"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 0, vjust = 0.5)
)
# Bar plot avec effectifs pour seuils 28/42
ggplot(base_principale, aes(x = SCA_Categorie_28_42)) +
geom_bar(fill = "#E07A5F", color = "white") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.3, size = 4) +
labs(
title = "Répartition du SCA selon les seuils 28/42",
x     = "Catégorie SCA",
y     = "Nombre d'observations"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 0, vjust = 0.5)
)
# 1. Calculer les moyennes des indicateurs par code de région
region_means <- base_principale %>%
dplyr::group_by(adm1_ocha_match) %>%
dplyr::summarise(
mean_SCA        = mean(SCA,        na.rm = TRUE),
mean_rSCI       = mean(rSCI,       na.rm = TRUE),
mean_HDDS_score = mean(HDDS_score, na.rm = TRUE),
mean_LhCSI_score = mean(LhCSI_score, na.rm = TRUE),
mean_SERS_score = mean(SERS_score, na.rm = TRUE),
.groups = "drop"
)
# 2. Récupérer les noms francisés des régions depuis le shapefile
regions_labels <- regions_sca %>%
dplyr::select(ADM1_PCODE, ADM1_FR) %>%
dplyr::rename(adm1_ocha_match = ADM1_PCODE)
# 3. Fusionner les moyennes avec les noms de région
region_summary <- region_means %>%
dplyr::left_join(regions_labels, by = "adm1_ocha_match") %>%
dplyr::select(ADM1_FR, mean_SCA, mean_rSCI, mean_HDDS_score, mean_LhCSI_score, mean_SERS_score) %>%
dplyr::arrange(ADM1_FR)
# 4. Mettre en forme dans un flextable
region_summary %>%
flextable::flextable() %>%
# En-têtes en gras
flextable::set_header_labels(
ADM1_FR           = "**Région**",
mean_SCA          = "**SCA moyen**",
mean_rSCI         = "**rCSI moyen**",
mean_HDDS_score   = "**HDDS moyen**",
mean_LhCSI_score  = "**LhCSI moyen**",
mean_SERS_score   = "**SERS moyen**"
) %>%
# Format numérique à 1 décimale sur toutes les colonnes indicateurs
flextable::colformat_double(j = 2:6, digits = 1) %>%
# Ajustement automatique puis largeur maximale à 100% de la page
flextable::autofit() %>%
flextable::set_table_properties(
layout = "autofit",
width = 1
) %>%
# Police plus petite pour tenir sur la page
flextable::fontsize(size = 8, part = "all") %>%
flextable::padding(padding = 1, part = "all") %>%
# Thème sobre
flextable::theme_vanilla() %>%
# Pied de table
flextable::add_footer_lines("Source : Calcul de l’auteur")
library(sf)
library(ggplot2)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("./Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
library(sf)
library(ggplot2)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot(shp_regions) +
geom_sf(fill = "grey95", color = "grey40", size = 0.3) +
geom_sf_text(
aes(label = ADM1_FR),
size = 3,
check_overlap = TRUE
) +
labs(
title = "Carte administrative du Tchad",
subtitle = "Régions avec étiquettes",
caption = "Source : Shapefile OCHA, février 2025"
) +
theme_minimal(base_size = 12) +
theme(
plot.title   = element_text(face = "bold", hjust = 0.5),
plot.subtitle= element_text(hjust = 0.5),
axis.text    = element_blank(),
axis.title   = element_blank(),
panel.grid   = element_blank()
)
library(sf)
library(ggplot2)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot() +
# Fond des régions
geom_sf(data = shp_regions, fill = "#f7f7f7", color = "#444444", size = 0.4) +
# Étiquettes des régions avec ggrepel
geom_text_repel(
data = shp_regions,
aes(label = ADM1_FR, geometry = geometry),
stat = "sf_coordinates",
size = 3,
fontface = "bold",
min.segment.length = 0,
segment.size = 0.2,
segment.color = "grey60",
box.padding = 0.3
) +
# Flèche nord et échelle graphique
annotation_scale(location = "bl", width_hint = 0.3, line_col = "grey50", text_col = "grey30") +
annotation_north_arrow(
location = "bl", which_north = "true",
style = north_arrow_fancy_orienteering,
height = unit(0.8, "cm"),
width  = unit(0.8, "cm")
) +
# Titres et légende vide
labs(
title    = "Carte administrative du Tchad",
subtitle = "Régions et noms officiels",
caption  = "Source : OCHA, février 2025"
) +
# Thème épuré
theme_void(base_size = 12) +
theme(
plot.title    = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption  = element_text(size = 8, color = "grey40"),
legend.position = "none"
)
library(ggrepel)
library(sf)
library(ggplot2)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot() +
# Fond des régions
geom_sf(data = shp_regions, fill = "#f7f7f7", color = "#444444", size = 0.4) +
# Étiquettes des régions avec ggrepel
geom_text_repel(
data = shp_regions,
aes(label = ADM1_FR, geometry = geometry),
stat = "sf_coordinates",
size = 3,
fontface = "bold",
min.segment.length = 0,
segment.size = 0.2,
segment.color = "grey60",
box.padding = 0.3
) +
# Flèche nord et échelle graphique
annotation_scale(location = "bl", width_hint = 0.3, line_col = "grey50", text_col = "grey30") +
annotation_north_arrow(
location = "bl", which_north = "true",
style = north_arrow_fancy_orienteering,
height = unit(0.8, "cm"),
width  = unit(0.8, "cm")
) +
# Titres et légende vide
labs(
title    = "Carte administrative du Tchad",
subtitle = "Régions et noms officiels",
caption  = "Source : OCHA, février 2025"
) +
# Thème épuré
theme_void(base_size = 12) +
theme(
plot.title    = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption  = element_text(size = 8, color = "grey40"),
legend.position = "none"
)
library(sf)
library(ggplot2)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot(shp_regions) +
geom_sf(fill = "grey95", color = "grey40", size = 0.3) +
geom_sf_text(
aes(label = ADM1_FR),
size = 3,
check_overlap = TRUE
) +
labs(
title = "Carte administrative du Tchad",
subtitle = "Régions avec étiquettes",
caption = "Source : Shapefile OCHA, février 2025"
) +
theme_minimal(base_size = 15) +
theme(
plot.title   = element_text(face = "bold", hjust = 0.5),
plot.subtitle= element_text(hjust = 0.5),
axis.text    = element_blank(),
axis.title   = element_blank(),
panel.grid   = element_blank()
)
library(sf)
library(ggplot2)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot(shp_regions) +
geom_sf(fill = "grey95", color = "grey40", size = 0.3) +
geom_sf_text(
aes(label = ADM1_FR),
siize = 4,
fontface = "bold",
box.padding = 0.5,
segment.size = 0.3,
check_overlap = TRUE
) +
labs(
title = "Carte administrative du Tchad",
subtitle = "Régions avec étiquettes",
caption = "Source : Shapefile OCHA, février 2025"
) +
theme_minimal(base_size = 15) +
theme(
plot.title   = element_text(face = "bold", hjust = 0.5),
plot.subtitle= element_text(hjust = 0.5),
axis.text    = element_blank(),
axis.title   = element_blank(),
panel.grid   = element_blank()
)
library(sf)
library(ggplot2)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot(shp_regions) +
geom_sf(fill = "grey95", color = "grey40", size = 0.3) +
geom_sf_text(
aes(label = ADM1_FR),
siize = 5,
box.padding = 0.5,
segment.size = 0.3,
check_overlap = TRUE
) +
labs(
title = "Carte administrative du Tchad",
subtitle = "Régions avec étiquettes",
caption = "Source : Shapefile OCHA, février 2025"
) +
theme_minimal(base_size = 15) +
theme(
plot.title   = element_text(face = "bold", hjust = 0.5),
plot.subtitle= element_text(hjust = 0.5),
axis.text    = element_blank(),
axis.title   = element_blank(),
panel.grid   = element_blank()
)
library(sf)
library(ggplot2)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot(shp_regions) +
geom_sf(fill = "grey95", color = "grey40", size = 0.3) +
geom_sf_text(
aes(label = ADM1_FR),
size = 3,
check_overlap = TRUE
) +
labs(
title = "Carte administrative du Tchad",
subtitle = "Régions avec étiquettes",
caption = "Source : Shapefile OCHA, février 2025"
) +
theme_minimal(base_size = 15) +
theme(
plot.title   = element_text(face = "bold", hjust = 0.5),
plot.subtitle= element_text(hjust = 0.5),
axis.text    = element_blank(),
axis.title   = element_blank(),
panel.grid   = element_blank()
)
library(sf)
library(ggplot2)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot(shp_regions) +
geom_sf(fill = "grey95", color = "grey40", size = 1) +
geom_sf_text(
aes(label = ADM1_FR),
size = 3,
check_overlap = TRUE
) +
labs(
title = "Carte administrative du Tchad",
subtitle = "Régions avec étiquettes",
caption = "Source : Shapefile OCHA, février 2025"
) +
theme_minimal(base_size = 15) +
theme(
plot.title   = element_text(face = "bold", hjust = 0.5),
plot.subtitle= element_text(hjust = 0.5),
axis.text    = element_blank(),
axis.title   = element_blank(),
panel.grid   = element_blank()
)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot(shp_regions) +
geom_sf(fill = "grey95", color = "grey40", size = 0.3) +
geom_sf_text(
aes(label = ADM1_FR),
size = 3,
check_overlap = TRUE
) +
labs(
title = "Carte administrative du Tchad",
subtitle = "Régions avec étiquettes",
caption = "Source : Shapefile OCHA, février 2025"
) +
theme_minimal(base_size = 15) +
theme(
plot.title   = element_text(face = "bold", hjust = 0.5),
plot.subtitle= element_text(hjust = 0.5),
axis.text    = element_blank(),
axis.title   = element_blank(),
panel.grid   = element_blank()
)
# Charger le shapefile des régions (adapter le chemin si nécessaire)
shp_regions <- sf::st_read("../Donnees/Shapefiles_Tchad/tcd_admbnda_adm1_20250212_AB.shp", quiet = TRUE)
# Affichage de la carte
ggplot(shp_regions) +
geom_sf(fill = "grey95", color = "grey40", size = 0.3) +
geom_sf_text(
aes(label = ADM1_FR),
size = 3,
check_overlap = TRUE
) +
labs(
title = "Carte administrative du Tchad",
subtitle = "Régions avec étiquettes",
caption = "Source : Shapefile OCHA, février 2025"
) +
theme_minimal(base_size = 25) +
theme(
plot.title   = element_text(face = "bold", hjust = 0.5),
plot.subtitle= element_text(hjust = 0.5),
axis.text    = element_blank(),
axis.title   = element_blank(),
panel.grid   = element_blank()
)
# Bar plot avec effectifs pour seuils 21/35
ggplot(base_principale, aes(x = SCA_Categorie_21_35)) +
geom_bar(fill = "#2E86AB", color = "white") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.3, size = 4) +
labs(
title = "Répartition du SCA selon les seuils 21/35",
x     = "Catégorie SCA",
y     = "Nombre d'observations"
) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 0, vjust = 0.5)
)
# Bar plot avec effectifs pour seuils 28/42
ggplot(base_principale, aes(x = SCA_Categorie_28_42)) +
geom_bar(fill = "#E07A5F", color = "white") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.3, size = 4) +
labs(
title = "Répartition du SCA selon les seuils 28/42",
x     = "Catégorie SCA",
y     = "Nombre d'observations"
) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 0, vjust = 0.5)
)
